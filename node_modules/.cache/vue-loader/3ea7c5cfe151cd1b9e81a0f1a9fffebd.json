{"remainingRequest":"D:\\dashboard-vuejs-and-tailwindcss\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dashboard-vuejs-and-tailwindcss\\src\\views\\stations.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\dashboard-vuejs-and-tailwindcss\\src\\views\\stations.vue","mtime":1609410706000},{"path":"D:\\dashboard-vuejs-and-tailwindcss\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dashboard-vuejs-and-tailwindcss\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\dashboard-vuejs-and-tailwindcss\\node_modules\\@vue\\cli-service\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\dashboard-vuejs-and-tailwindcss\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dashboard-vuejs-and-tailwindcss\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZ20tc3R5bGUgLmdtLXN0eWxlLWl3LWMgew0KICBwYWRkaW5nOiA0cHggIWltcG9ydGFudDsNCiAgbWF4LWhlaWdodDogNDhweCAhaW1wb3J0YW50Ow0KICBjb2xvcjogcmdiYSg2NywgNTYsIDIwMiwgMSkgIWltcG9ydGFudDsNCn0NCg=="},{"version":3,"sources":["stations.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA;AACA;AACA","file":"stations.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"text-gray-600 w-full shadow py-2 my-1 rounded-b-lg\" style=\"position: sticky;\">\r\n        <div class=\"px-4 flex flex-wrap mb-6\">\r\n            <div class=\"lg:w-1/4 w-full\">\r\n            <p class=\"font-bold text-3xl text-start\">Stations</p>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    <div class=\"maps\">\r\n<GmapMap\r\n    :center=\"{lat:currentlocation.lat, lng:currentlocation.lng}\"\r\n    :zoom=\"8\"\r\n  map-type-id=\"terrain\"\r\n  style=\"width: 100%; height: 520px\"\r\n    >\r\n        <GmapMarker\r\n    :key=\"index\"\r\n    v-for=\"(item, index) in stations\"\r\n    :position=\"getPosition(item)\"\r\n    :clickable=\"true\"\r\n    :draggable=\"false\"\r\n/>\r\n  <gmap-info-window\r\n  :key=\"index\"\r\n    v-for=\"(item, index) in stations\"\r\n          :options=\"infoWindowOptions\"\r\n          :position=\"getPosition(item)\"\r\n          :opened=\"true\"\r\n          @closeclick=\"handleInfoWindowClose\"\r\n\r\n      >\r\n          <div class=\"info-window text-ingido-800\" style=\"padding:16px\">\r\n            {{item.name}}\r\n        </div>\r\n      </gmap-info-window>\r\n\r\n    </GmapMap>\r\n    </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { gmapApi } from 'vue2-google-maps'\r\nexport default {\r\n  name: 'stations',\r\n  data () {\r\n    return {\r\n      stations: [\r\n        { name: 'station1', lat: 31.506432, lng: 34.239167999999995 },\r\n        { name: 'station2', lat: 31.606432, lng: 34.939167999999995 },\r\n        { name: 'station3', lat: 31.906432, lng: 34.0039167999999995 },\r\n        { name: 'station4', lat: 31.006432, lng: 34.119167999999995 }\r\n      ],\r\n      currentlocation: { lat: 0, lng: 0 },\r\n      infoWindowOptions: {\r\n        pixelOffset: {\r\n          width: 0,\r\n          height: -35\r\n        }\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    google: gmapApi\r\n    /*  infoWindowPosition () {\r\n      return {\r\n        lat: parseFloat(this.activedriver.lat),\r\n        lng: parseFloat(this.activedriver.lng)\r\n      }\r\n    } */\r\n  },\r\n  methods: {\r\n    getPosition (item) {\r\n      return {\r\n        lat: parseFloat(item.lat),\r\n        lng: parseFloat(item.lng)\r\n      }\r\n    },\r\n    getCoords () {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        this.currentlocation = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude\r\n        }\r\n      })\r\n    }\r\n    /*    handleInfoWindowClose () {\r\n      this.activedriver = []\r\n      this.infoWindowOpened = false\r\n    } */\r\n  },\r\n  created () {\r\n    this.getCoords()\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.gm-style .gm-style-iw-c {\r\n  padding: 4px !important;\r\n  max-height: 48px !important;\r\n  color: rgba(67, 56, 202, 1) !important;\r\n}\r\n</style>\r\n"]}]}