{"remainingRequest":"D:\\dashboard-vuejs-and-tailwindcss\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dashboard-vuejs-and-tailwindcss\\src\\views\\Level.vue?vue&type=template&id=1e84008c&scoped=true&","dependencies":[{"path":"D:\\dashboard-vuejs-and-tailwindcss\\src\\views\\Level.vue","mtime":1609707390000},{"path":"D:\\dashboard-vuejs-and-tailwindcss\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dashboard-vuejs-and-tailwindcss\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\dashboard-vuejs-and-tailwindcss\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dashboard-vuejs-and-tailwindcss\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2PgogICAgICAgIDxkaXYgY2xhc3M9InRleHQtZ3JheS02MDAgYmctd2hpdGUgdy1mdWxsIHNoYWRvdyBweS0yIG15LTEgcm91bmRlZC1iLWxnIiBzdHlsZT0icG9zaXRpb246IHN0aWNreTsiPgogICAgICAgIDxkaXYgY2xhc3M9InB4LTQgZmxleCBmbGV4LXdyYXAgbWItNiBqdXN0aWZ5LWJldHdlZW4gaXRlbXMtY2VudGVyIHB0LTMiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJsZzp3LTEvNCB3LWZ1bGwiPgogICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1ncmF5LTcwMCB0ZXh0LTN4bCB0ZXh0LXN0YXJ0IGZvbnQtc2VyaWYiPkRhc2hib2FyZDwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxnOnctMS8zIHctZnVsbCI+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iYmctZ3JheS0yMDAgdGV4dC1ibGFjayBmb3JtLXRleHQtaW5wdXQgdy1mdWxsIHB4LTQgZm9jdXM6b3V0bGluZS1ub25lIGZvY3VzOmJvcmRlci1pbmRpZ28tNzAwIHJvdW5kZWQtbWQiIHBsYWNlaG9sZGVyPSJUeXBlIGhlcmUgdG8gc2VhcmNoLi4uIiA+CiAgICAgICAgICAgIDxhIHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7cmlnaHQ6IDI0cHg7IHRvcDogMzBweDsgZm9udC1zaXplOiAxNnB4OyI+PGkgY2xhc3M9ImZhcyBmYS1zZWFyY2giPjwvaT48L2E+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9Im14LTEwIHB4LTgiPgogICAgICAgIDxkaXYgY2xhc3M9ImdyaWQgZ3JpZC1jb2xzLTMgZ2FwLTQgbXktMTIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJiZy13aGl0ZSByb3VuZGVkLXhsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InAtNiI+CiAgICAgICAgICAgICAgICAgICAgPGRpdj48cCBjbGFzcz0idGV4dC1ncmF5LTcwMCB0ZXh0LXhsIj5CZXN0IFBlcnNvbjwvcD48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJteS0zIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiA6Y2xhc3M9ImBzaGFkb3ctbWQgcm91bmRlZC1tZCBwLTMgbXktNCBmbGV4IGp1c3RpZnktYmV0d2VlbiBpdGVtcy1jZW50ZXIgJHtpdGVtLmNib3JkZXJ9YCIgdi1mb3I9IihpdGVtLGluZGV4KSBpbiBwZXJzb25zIiA6a2V5PSJpbmRleCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmbGV4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWcgdy0xMiBoLTEyIj48aW1nIGNsYXNzPSJyb3VuZGVkLWZ1bGwiIHNyYz0iLi4vYXNzZXRzL2ltYWdlcy9hdmF0YXJ1c2VyLmpwZyI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibXgtMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LWdyYXktNzAwIj57e2l0ZW0ubmFtZX19PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1ncmF5LTUwMCB0ZXh0LXNtIj57e2l0ZW0uZHVlfX08L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+PHNwYW4gOmNsYXNzPSJgcHgtMSByb3VuZGVkIHRleHQtd2hpdGUgZm9udC1zZW1pYm9sZCBiZyAke2l0ZW0uY2JvcmRlcn1gIj57e2l0ZW0ubm99fTwvc3Bhbj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXggZmxleC1jb2wganVzdGlmeS1iZXR3ZWVuIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJnLXdoaXRlIHNoYWRvdyByb3VuZGVkLXhsIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwLTQgcm91bmRlZC14bCBmbGV4IGp1c3RpZnktYmV0d2VlbiBpdGVtcy1jZW50ZXIgdGV4dC13aGl0ZSByb3VuZGVkLW1kIiBzdHlsZT0iYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjODI3YWYzIDAlLCNiNDdhZjMgMTAwJSkgIWltcG9ydGFudDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbiBmbGV4IGp1c3RpZnktY2VudGVyIGl0ZW1zLWNlbnRlciBib3JkZXIgYm9yZGVyLXdoaXRlIHJvdW5kZWQtbGcgIHctMTIgaC0xMiIgc3R5bGU9ImJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzgyN2FmMyAwJSwjYjQ3YWYzIDEwMCUpICFpbXBvcnRhbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtdXNlci1hbHQiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXgganVzdGlmeS1iZXR3ZWVuIGl0ZW1zLWNlbnRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJnLXdoaXRlIHAtMSByb3VuZGVkIG1yLTIiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5OZXcgVmlzaXRvcjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idy04IGgtOCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Ii4uL2Fzc2V0cy9jaGFydC5zdmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXgganVzdGlmeS1iZXR3ZWVuIGl0ZW1zLWNlbnRlciBwLTQiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtZ3JheS03MDAgdGV4dC1sZyI+VG90YWwgVmlzaXRvcnM8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZm9udC1tZWRpdW0gdGV4dC1ncmF5LTgwMCBteS0xIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YW5pbWF0ZWQtbnVtYmVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWFzaW5nPSJsaW5lYXIiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOnZhbHVlPSIxNzI0MSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6Zm9ybWF0VmFsdWU9ImZvcm1hdFRvUHJpY2UiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmR1cmF0aW9uPSI0MDAwIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJoLTIwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwcm9ncmVzcy1iYXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6b3B0aW9ucz0ib3B0aW9uc29uZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6dmFsdWU9InZhbHVlb25lIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJiZy13aGl0ZSBzaGFkb3cgcm91bmRlZC14bCI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icC01IHJvdW5kZWQteGwgZmxleCBqdXN0aWZ5LWJldHdlZW4gaXRlbXMtY2VudGVyIHRleHQtd2hpdGUgcm91bmRlZC1tZCIgc3R5bGU9ImJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzY3ZGRlYSAwJSwgIzZjZTZmNCAxMDAlKTsiPgogICAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imljb24gZmxleCBqdXN0aWZ5LWNlbnRlciBpdGVtcy1jZW50ZXIgYm9yZGVyIGJvcmRlci13aGl0ZSByb3VuZGVkLWxnICB3LTEyIGgtMTIiIHN0eWxlPSJiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICM2N2RkZWEgMCUsICM2Y2U2ZjQgMTAwJSk7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtdXNlci1hbHQiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleCBqdXN0aWZ5LWJldHdlZW4gaXRlbXMtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiZy13aGl0ZSBwLTEgcm91bmRlZCBtci0yIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5OZXcgVmlzaXRvcjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InctOCBoLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Ii4uL2Fzc2V0cy9jaGFydC5zdmciPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleCBqdXN0aWZ5LWJldHdlZW4gaXRlbXMtY2VudGVyIHAtNCI+CiAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtZ3JheS03MDAgdGV4dC1sZyI+UGFpZCBWaXNpdG9yczwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImZvbnQtbWVkaXVtIHRleHQtZ3JheS04MDAgbXktMSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YW5pbWF0ZWQtbnVtYmVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlYXNpbmc9ImxpbmVhciIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDp2YWx1ZT0iNDUzOTUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6Zm9ybWF0VmFsdWU9ImZvcm1hdFRvUHJpY2UiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ZHVyYXRpb249IjQwMDAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaC0yMCI+CiAgICAgICAgICAgICAgICAgICAgPHByb2dyZXNzLWJhcgogICAgICAgICAgICAgICAgICAgICAgICA6b3B0aW9ucz0ib3B0aW9uc3R3byIKICAgICAgICAgICAgICAgICAgICAgICAgOnZhbHVlPSJ2YWx1ZXR3byIKICAgICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYmctd2hpdGUgc2hhZG93IHJvdW5kZWQteGwiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwLTQgdGV4dC1ncmF5LTgwMCB0ZXh0LXhsIj4KICAgICAgICAgICAgICA8cD5Ub3RhbCBQcm9ncmVzczwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhcGV4Y2hhcnQgaGVpZ2h0PSIzMDAiIDpvcHRpb25zPSJvcHRpb25zMSIgOnNlcmllcz0ic2VyaWVzIj48L2FwZXhjaGFydD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im10LTggcHgtNiBmbGV4IGp1c3RpZnktYmV0d2VlbiBpdGVtLWNlbnRlciBkaXZpZGUteCBkaXZpZGUtZ3JheS01MDAiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9IiI+CiAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1ncmF5LTcwMCI+VE9UQUw8L3A+CiAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1ncmF5LTUwMCB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICAgICAgPGFuaW1hdGVkLW51bWJlcgogICAgICAgICAgICAgICAgICAgIGVhc2luZz0ibGluZWFyIgogICAgICAgICAgICAgICAgICAgIDp2YWx1ZT0iNzciCiAgICAgICAgICAgICAgICAgICAgOmZvcm1hdFZhbHVlPSJmb3JtYXRwZXJjZW50IgogICAgICAgICAgICAgICAgICAgIDpkdXJhdGlvbj0iMzAwMCIKICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBsLTEiPgogICAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtZ3JheS03MDAiPlRFQU0gQTwvcD4KICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LWdyYXktNTAwIHRleHQtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgPGFuaW1hdGVkLW51bWJlcgogICAgICAgICAgICAgICAgICBlYXNpbmc9ImxpbmVhciIKICAgICAgICAgICAgICAgICAgOnZhbHVlPSI4NCIKICAgICAgICAgICAgICAgICAgOmZvcm1hdFZhbHVlPSJmb3JtYXRwZXJjZW50IgogICAgICAgICAgICAgICAgICA6ZHVyYXRpb249IjMwMDAiCiAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGwtMSI+CiAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1ncmF5LTcwMCI+VEVBTSBCPC9wPgogICAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtZ3JheS01MDAgdGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgICA8YW5pbWF0ZWQtbnVtYmVyCiAgICAgICAgICAgICAgICAgIGVhc2luZz0ibGluZWFyIgogICAgICAgICAgICAgICAgICA6dmFsdWU9Ijk0IgogICAgICAgICAgICAgICAgICA6Zm9ybWF0VmFsdWU9ImZvcm1hdHBlcmNlbnQiCiAgICAgICAgICAgICAgICAgIDpkdXJhdGlvbj0iMzAwMCIKICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwbC0xIj4KICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LWdyYXktNzAwIj5URUFNIEM8L3A+CiAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1ncmF5LTUwMCB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICA8YW5pbWF0ZWQtbnVtYmVyCiAgICAgICAgICAgICAgICBlYXNpbmc9ImxpbmVhciIKICAgICAgICAgICAgICAgIDp2YWx1ZT0iOTQiCiAgICAgICAgICAgICAgICA6Zm9ybWF0VmFsdWU9ImZvcm1hdHBlcmNlbnQiCiAgICAgICAgICAgICAgICA6ZHVyYXRpb249IjMwMDAiCiAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iZ3JpZCBncmlkLWNvbHMtMyBnYXAtNCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTIgYmctd2hpdGUgcm91bmRlZC14bCBwLTQiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icC0yIj48cCBjbGFzcz0idGV4dC1ncmF5LTgwMCB0ZXh0LXhsIj5TdGF0dXMgTGV2ZWw8L3A+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIDxhcGV4Y2hhcnQgdHlwZT0ic2NhdHRlciIgaGVpZ2h0PSIzNTAiIDpvcHRpb25zPSJjaGFydE9wdGlvbnMiIDpzZXJpZXM9InNlcmllc09wdGlvbnMiPjwvYXBleGNoYXJ0PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJiZy13aGl0ZSByb3VuZGVkLXhsIHAtNCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwLTIiPjxwIGNsYXNzPSJ0ZXh0LWdyYXktODAwIHRleHQteGwiPlN0YXR1cyBMZXZlbDwvcD48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdyaWQgY29sLTEgZ2FwLTQiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJnLXdoaXRlIHJvdW5kZWQteGwgZmxleCBwLTQganVzdGlmeS1iZXR3ZWVuIGl0ZW1zLWNlbnRlciBzaGFkb3ctbWQiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpY29uIGZsZXgganVzdGlmeS1jZW50ZXIgaXRlbXMtY2VudGVyICByb3VuZGVkLWZ1bGwgYmctZ3JlZW4tNjAwIHctMTIgaC0xMiIgc3R5bGU9ImJhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCByZ2IoNDkgMjI5IDExNykgMCUsIHJnYig4NiAyNDggMTUxKSAxMDAlKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJoLTYgdy02IiBzcmM9Ii4uL2Fzc2V0cy93aGVlbGNoYWlyLnN2ZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LXJpZ2h0IHRleHQtbGciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtZ3JheS03MDAiPkhlYWx0aCBJbnN1cmFuY2U8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZm9udC1zZW1pYm9sZCB0ZXh0LWdyZWVuLTUwMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGFuaW1hdGVkLW51bWJlcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVhc2luZz0ibGluZWFyIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDp2YWx1ZT0iMjUyODEiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmZvcm1hdFZhbHVlPSJmb3JtYXRUb1ByaWNlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpkdXJhdGlvbj0iNDAwMCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJiZy13aGl0ZSByb3VuZGVkLXhsIGZsZXggcC00IGp1c3RpZnktYmV0d2VlbiBpdGVtcy1jZW50ZXIgc2hhZG93LW1kIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbiBmbGV4IGp1c3RpZnktY2VudGVyIGl0ZW1zLWNlbnRlciAgcm91bmRlZC1mdWxsIHctMTIgaC0xMiIgc3R5bGU9ImJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwjZmJjNjQ3IDAlLCNmZmQzNjkgMTAwJSk7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImgtNiB3LTYiIHNyYz0iLi4vYXNzZXRzL2hhbmRzaGFrZS5zdmciPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1yaWdodCB0ZXh0LWxnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LWdyYXktNzAwIj5IZWFsdGggSW5zdXJhbmNlPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImZvbnQtc2VtaWJvbGQgdGV4dC15ZWxsb3ctNTAwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YW5pbWF0ZWQtbnVtYmVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWFzaW5nPSJsaW5lYXIiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOnZhbHVlPSIyNTI4MSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6Zm9ybWF0VmFsdWU9ImZvcm1hdFRvUHJpY2UiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmR1cmF0aW9uPSI0MDAwIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJnLXdoaXRlIHJvdW5kZWQteGwgZmxleCBwLTQganVzdGlmeS1iZXR3ZWVuIGl0ZW1zLWNlbnRlciBzaGFkb3ctbWQiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpY29uIGZsZXgganVzdGlmeS1jZW50ZXIgaXRlbXMtY2VudGVyICByb3VuZGVkLWZ1bGwgdy0xMiBoLTEyIiBzdHlsZT0iYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjNjdkZGVhIDAlLCAjNmNlNmY0IDEwMCUpOwoiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaC02IHctNiIgc3JjPSIuLi9hc3NldHMvaGVhbHRoLWNhcmUuc3ZnIj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtcmlnaHQgdGV4dC1sZyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1ncmF5LTcwMCI+U29jaWFsIEluc3VyYW5jZTwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJmb250LXNlbWlib2xkIHRleHQtYmx1ZS00MDAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhbmltYXRlZC1udW1iZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlYXNpbmc9ImxpbmVhciIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6dmFsdWU9IjI1MjgxIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpmb3JtYXRWYWx1ZT0iZm9ybWF0VG9QcmljZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ZHVyYXRpb249IjQwMDAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYmctd2hpdGUgcm91bmRlZC14bCBmbGV4IHAtNCBqdXN0aWZ5LWJldHdlZW4gaXRlbXMtY2VudGVyCiAgICAgICAgICAgICAgICAgICAgIHNoYWRvdy1tZCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imljb24gZmxleCBqdXN0aWZ5LWNlbnRlciBpdGVtcy1jZW50ZXIgIHJvdW5kZWQtZnVsbCB3LTEyIGgtMTIiIHN0eWxlPSJiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICM4MjdhZjMgMCUsICNiNDdhZjMgMTAwJSkgIWltcG9ydGFudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJoLTYgdy02IiBzcmM9Ii4uL2Fzc2V0cy9idWlsZGluZy5zdmciPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1yaWdodCB0ZXh0LWxnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LWdyYXktNzAwIj5BdXRvIEluc3VyYW5jZTwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJmb250LXNlbWlib2xkIHRleHQtYmx1ZS00MDAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhbmltYXRlZC1udW1iZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlYXNpbmc9ImxpbmVhciIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6dmFsdWU9IjI1MjgxIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpmb3JtYXRWYWx1ZT0iZm9ybWF0VG9QcmljZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ZHVyYXRpb249IjQwMDAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDwvZGl2Pgo="},null]}