{"remainingRequest":"D:\\dashboard-vuejs-and-tailwindcss\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\dashboard-vuejs-and-tailwindcss\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\dashboard-vuejs-and-tailwindcss\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dashboard-vuejs-and-tailwindcss\\src\\components\\base\\Level.vue?vue&type=template&id=f2ab23ae&scoped=true&","dependencies":[{"path":"D:\\dashboard-vuejs-and-tailwindcss\\src\\components\\base\\Level.vue","mtime":1609765750000},{"path":"D:\\dashboard-vuejs-and-tailwindcss\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dashboard-vuejs-and-tailwindcss\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\dashboard-vuejs-and-tailwindcss\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dashboard-vuejs-and-tailwindcss\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}